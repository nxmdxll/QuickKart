/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author tenzi
 */
import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

public class BuyerPage extends javax.swing.JFrame {
     class DeleteCellRenderer extends DefaultTableCellRenderer {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
            boolean isSelected, boolean hasFocus, int row, int column) {

            JLabel label = new JLabel("<html><u>" + value.toString() + "</u></html>");
            label.setForeground(new Color(0, 0, 153)); // Red to highlight "Delete"
            label.setFont(new Font("SansSerif", Font.BOLD, 12));
            label.setHorizontalAlignment(SwingConstants.CENTER);
            return label;
        }
    }

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(BuyerPage.class.getName());
  JTextField tfName, tfEmail, tfPhone;
    JTextArea taAddress;
    JButton btnAdd;
    JTable buyerTable;
    DefaultTableModel tableModel;
    
    /**
     * Creates new form BuyerPage
     */
    public BuyerPage() {
          setTitle("Buyer Management");
        setSize(800, 500);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        initForm();    // Top panel with form
        initTable();   // Center panel with JTable
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
       private void initForm() {
        JPanel formPanel = new JPanel(new GridLayout(5, 2, 10, 10));
        formPanel.setBackground(new Color(153, 203, 255)); 

        tfName = new JTextField();
        tfEmail = new JTextField();
        tfPhone = new JTextField();
        taAddress = new JTextArea(3, 20);

        btnAdd = new JButton("ADD BUYER");
        btnAdd.setBackground(new Color(0, 0, 204));
        btnAdd.setForeground(Color.WHITE);
        btnAdd.setFont(new Font("PMingLiU-ExtB", Font.BOLD, 24));

           formPanel.add(new JLabel("Name"));
        formPanel.add(tfName);

        formPanel.add(new JLabel("Email"));
        formPanel.add(tfEmail);

        formPanel.add(new JLabel("Phone"));
        formPanel.add(tfPhone);

        formPanel.add(new JLabel("Address"));
        formPanel.add(new JScrollPane(taAddress));

        formPanel.add(new JLabel(""));
        formPanel.add(btnAdd);

        add(formPanel, BorderLayout.NORTH);

        btnAdd.addActionListener(e -> addBuyer());
    }

 private void initTable() {
        tableModel = new DefaultTableModel(new String[]{"ID", "Name", "Email", "Phone", "Address", "Delete"}, 0);
        buyerTable = new JTable(tableModel);
        buyerTable.getColumn("Delete").setCellRenderer(new DeleteCellRenderer());

        buyerTable.getTableHeader().setBackground(new Color(230, 230, 250));
        buyerTable.getTableHeader().setForeground(new Color(0, 0, 225));
        buyerTable.getTableHeader().setFont(new Font("Gabriola", Font.BOLD, 20));
        buyerTable.setRowHeight(24);
        buyerTable.setFont(new Font("SansSerif", Font.PLAIN, 13));

        add(new JScrollPane(buyerTable), BorderLayout.CENTER);
        buyerTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int col = buyerTable.getSelectedColumn();
                int row = buyerTable.getSelectedRow();
                if (col == 5) {
                    int id = Integer.parseInt(buyerTable.getValueAt(row, 0).toString());
                    deleteBuyer(id);
                }
            }
        });

        loadBuyers();
    }

    public static void main(String args[]) {
         SwingUtilities.invokeLater(() -> new BuyerPage().setVisible(true));
    }
    
     private void addBuyer() {
       String name = tfName.getText().trim();
    String email = tfEmail.getText().trim();
    String phone = tfPhone.getText().trim();
    String address = taAddress.getText().trim();


    if (name.isEmpty() || email.isEmpty() || phone.isEmpty() || address.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please fill in all buyer details.",
            "Missing Information", JOptionPane.WARNING_MESSAGE);
        return; 
    }
   
    if (!email.matches("^[\\w.-]+@[\\w.-]+\\.\\w{2,}$")) {
    JOptionPane.showMessageDialog(null, "Please enter a valid email address.",
        "Invalid Email", JOptionPane.WARNING_MESSAGE);
    return;
}
   
    if (!phone.matches("\\d{10}")) {
    JOptionPane.showMessageDialog(null, "Please enter a valid 10-digit phone number.",
        "Invalid Phone", JOptionPane.WARNING_MESSAGE);
    return;
} 
    phone = "+91 " + phone; 
        try {
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/logindatabase", "root", "");
        String sql = "INSERT INTO buyers (name, email, phone, address) VALUES (?, ?, ?, ?)";
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setString(1, name);
        ps.setString(2, email);
        ps.setString(3, phone);  
        ps.setString(4, address);
        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Buyer added!");

        loadBuyers();

        tfName.setText("");
        tfEmail.setText("");
        tfPhone.setText("");
        taAddress.setText("");
         } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
    }
}
 private void loadBuyers() {
        tableModel.setRowCount(0);
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/logindatabase", "root", "");
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM buyers");
            while (rs.next()) {
                tableModel.addRow(new Object[]{
                    rs.getInt("id"),
                    rs.getString("name"),
                    rs.getString("email"),
                    rs.getString("phone"), 
                    rs.getString("address"),
                    "Delete"
                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Load error: " + ex.getMessage());
        }
    }
  private void deleteBuyer(int id) {
        int confirm = JOptionPane.showConfirmDialog(null, "Delete this buyer?");
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/logindatabase", "root", "");
                PreparedStatement ps = con.prepareStatement("DELETE FROM buyers WHERE id=?");
                ps.setInt(1, id);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Buyer deleted!");
                loadBuyers();
  } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Delete error: " + ex.getMessage());
            }
        }
    }
/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}